name: Publish Docker Image (GPR)

on:
  workflow_dispatch:
  schedule:
    - cron: '*/5 * * * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: doctor-server/tf2-dedicated-server
  remote_buildid: 0
  exists: 'false'
  tag: null

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    strategy:
      matrix:
        tag: [latest, slim]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build (Dockerfile.buildid)
        run: docker build -f Dockerfile.buildid -t remote-buildid:232250 --build-arg APP_ID=232250 .

      - name: Find the Remote buildid
        id: remote-buildid
        run: |
          remote_buildid=$(docker run --rm remote-buildid:232250 sh -c "cat buildid.txt")
          echo "remote_buildid=$remote_buildid" >> $GITHUB_ENV
          if [ "${{ matrix.tag }}" == "latest" ]; then
            echo "tag=${remote_buildid}" >> $GITHUB_ENV
          else
            echo "tag=${remote_buildid}-${{ matrix.tag }}" >> $GITHUB_ENV
          fi

      - name: Remove Docker image
        run: docker rmi remote-buildid:232250

      - name: Check if tag exists
        if: github.event_name != 'workflow_dispatch'
        id: tag-exists
        run: |
          if docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.tag }}; then
            echo "exists=true" >> $GITHUB_ENV
          fi

      - name: Free up disk space
        if: env.exists == 'false' || github.event_name == 'workflow_dispatch'
        run: |
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" || true

      - name: Log in to the Container registry
        if: env.exists == 'false' || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        if: env.exists == 'false' || github.event_name == 'workflow_dispatch'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.tag }}
            type=raw,value=${{ env.tag }}

      - name: Push Docker image
        if: env.exists == 'false' || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            tag=${{ matrix.tag }}
            remote_buildid=${{ env.remote_buildid }}
