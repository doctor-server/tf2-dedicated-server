name: Publish Docker Image (Hub)

on:
  workflow_dispatch:
  schedule:
    - cron: '*/5 * * * *'

env:
  IMAGE_NAME: doctorserver/tf2-dedicated-server
  REMOTE_BUILDID: 0
  APP_ID: 232250
  TAG_EXISTS: 'false'
  TAG: null

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    strategy:
      matrix:
        tag: [latest, slim]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run remote_buildid.py and save output
        id: remote-buildid
        run: |
          buildid=$(python remote_buildid.py)
          echo "REMOTE_BUILDID=$buildid" >> $GITHUB_ENV
          if [ "${{ matrix.tag }}" == "latest" ]; then
            echo "TAG=$buildid" >> $GITHUB_ENV
          else
            echo "TAG=$buildid-${{ matrix.tag }}" >> $GITHUB_ENV
          fi

      - name: Check if tag exists
        if: github.event_name != 'workflow_dispatch'
        id: tag-exists
        run: |
          if docker pull ${{ env.IMAGE_NAME }}:${{ env.TAG }}; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          fi

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          build-mount-path: '/var/lib/docker'
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          # remove-docker-images: 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        if: env.TAG_EXISTS == 'false' || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        if: env.TAG_EXISTS == 'false' || github.event_name == 'workflow_dispatch'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.tag }}
            type=raw,value=${{ env.TAG }}

      - name: Push Docker image
        if: env.TAG_EXISTS == 'false' || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            TAG=${{ matrix.tag }}
            REMOTE_BUILDID=${{ env.REMOTE_BUILDID }}
